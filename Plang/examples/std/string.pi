fn strcpy(dest: *i8, src: *i8) : *i8 extern ;
fn strncpy(dest: *i8, src: *i8, n: i64) : *i8 extern ;
fn strcat(dest: *i8, src: *i8) : *i8 extern ;
fn strncat(dest: *i8, src: *i8, n: i64) : *i8 extern ;
fn strcmp(str1: *i8, str2: *i8) : i32 extern ;
fn strncmp(str1: *i8, str2: *i8, n: i64) : i32 extern ;
fn strchr(str: *i8, c: i32) : *i8 extern ;
fn strrchr(str: *i8, c: i32) : *i8 extern ;
fn strstr(haystack: *i8, needle: *i8) : *i8 extern ;
fn strlen(str: *i8) : i64 extern;
fn strnlen(str: *i8, n: i64) : i64 extern ;
fn atoi(str: *i8) : i32 extern ;
fn atol(str: *i8) : i64 extern ;
fn atoll(str: *i8) : i64 extern ;
fn atof(str: *i8) : f64 extern ;
fn strtof(str: *i8, end: *i8) : f32 extern ;
fn strtod(str: *i8, end: *i8) : f64 extern ;
// TODO
//fn strtold(str: *i8, end*i8: *i8) : long f64 extern ;
//fn strpbrk(str: *i8, accept: *i8) : *i8 extern ;
//fn strspn(str: *i8, accept: *i8) : i64 extern ;
//fn strcspn(str: *i8, reject: *i8) : i64 extern ;
//fn strtok(str: *i8, delim: *i8) : *i8 extern ;
//fn strerror(errnum: i32) : *i8 extern ;
//fn strerror_r(errnum: i32, buf: *i8, buflen: i64) : i32 extern ;
//fn strtoll(str: *i8, end*i8: *i8, base: i32) : long long extern ;
//fn strtoull(str: *i8, end*i8: *i8, base: i32) : unsigned long long extern ;
//fn snpri32f(str: *i8, size: i64, format: *i8, ...) : i32 extern ;
//fn vsnpri32f(str: *i8, size: i64, format: *i8, args: *i8) : i32 extern ;
//fn vspri32f(str: *i8, format: *i8, args: *i8) : i32 extern ;
//fn spri32f(str: *i8, format: *i8, ...) : i32 extern ;
//fn sscanf(str: *i8, format: *i8, ...) : i32 extern ;
//fn isalpha(c: i32) : i32 extern ;
//fn isdigit(c: i32) : i32 extern ;
//fn isspace(c: i32) : i32 extern ;
//fn ispunct(c: i32) : i32 extern ;
//fn isxdigit(c: i32) : i32 extern ;
//fn islower(c: i32) : i32 extern ;
//fn isupper(c: i32) : i32 extern ;
//fn tolower(c: i32) : i32 extern ;
//fn toupper(c: i32) : i32 extern ;
//fn toascii(c: i32) : i32 extern ;
//fn isascii(c: i32) : i32 extern ;
//fn bsearch(key: *i8, base: *i8, nmemb: i64, size: i64, compar: *i8) : *i8 extern ;
//fn qsort(base: *i8, nmemb: i64, size: i64, compar: *i8) extern ;
//fn calloc(nmemb: i64, size: i64) : *i8 extern ;
//fn realloc(*i8: *i8, size: i64) : *i8 extern ;
//fn malloc(size: i64) : *i8 extern ;
//fn free(*i8: *i8) extern ;
//fn strdup(str: *i8) : *i8 extern ;
//fn strndup(str: *i8, n: i64) : *i8 extern ;
//fn strcoll(str1: *i8, str2: *i8) : i32 extern ;
//fn mblen(str: *i8, n: i64) : i32 extern ;
//fn mbtowc(pwc: *i8, str: *i8, n: i64) : i32 extern ;
//fn wctomb(str: *i8, wc: wchar_t) : i32 extern ;
//fn mbstowcs(wcs: *i8, mbstr: *i8, n: i64) : i64 extern ;
//fn wcstombs(mbstr: *i8, wcs: *i8, n: i64) : i64 extern ;
//fn wcscpy(dest: *i8, src: *i8) : *i8 extern ;
//fn wcsncpy(dest: *i8, src: *i8, n: i64) : *i8 extern ;
//fn wcscat(dest: *i8, src: *i8) : *i8 extern ;
//fn wcsncat(dest: *i8, src: *i8, n: i64) : *i8 extern ;
//fn wcscmp(wcs1: *i8, wcs2: *i8) : i32 extern ;
//fn wcsncmp(wcs1: *i8, wcs2: *i8, n: i64) : i32 extern ;
//fn wcschr(wcs: *i8, wc: wchar_t) : *i8 extern ;
//fn wcsrchr(wcs: *i8, wc: wchar_t) : *i8 extern ;
//fn wcsstr(haystack: *i8, needle: *i8) : *i8 extern ;
//fn wcslen(wcs: *i8) : i64 extern ;
//fn wcsnlen(wcs: *i8, n: i64) : i64 extern ;
//fn wctob(wc: i8) : i32 extern ;
